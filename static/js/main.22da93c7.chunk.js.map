{"version":3,"sources":["RayCasting/Objects/boundary.js","RayCasting/Objects/ray.js","RayCasting/Objects/particle.js","RayCasting/Canvas/3d-plane/methods.js","RayCasting/Canvas/2d-plane/methods.js","RayCasting/Canvas/methods.js","RayCasting/Raycasting.js","App.js","reportWebVitals.js","index.js"],"names":["Boundary","x1","y1","x2","y2","this","startPoint","x","y","endPoint","context","document","getElementById","getContext","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","Ray","pos","angle","direction","a","i","rad","Math","PI","cos","sin","wall","x3","y3","x4","y4","den","t","Particle","view_Range","rays","heading","getAngle","push","amt","vel","index","angle_i","setAngel","start","end","sqrt","pow","walls","scence","length","closest","record","Infinity","j","pt","cast","distance","getDistance","fillStyle","arc","fill","show","scneceW","reDraw3DScene","scene","w","fillRect","b","map_range","h","test","resetCanvas_3d","value","low1","high1","low2","high2","reDraw2D","e","particle","boundary","canvas","evt","rect","getBoundingClientRect","clientX","left","clientY","top","getMousePos","update","reDraw","render3D","look","resetCanvas2d","resetCanvas_2d","PrettoSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","background","track","borderRadius","rail","Slider","CANVAS_WIDTH","CANVAS_HEIGHT","RayCasting","props","state","render3d","moveMode","floor","random","setState","NUMBER_RANDOM_WALLS","key","rotate","move","val","setTimeout","className","onKeyDown","rotateView","Button","variant","onClick","switch3DView","switchMoveMode","valueLabelDisplay","aria-label","defaultValue","min","max","step","onChange","handleViewRangeChange","scale","id","onMouseMoveCapture","moveRay","tabIndex","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22da93c7.chunk.js","sourcesContent":["\r\nexport default class Boundary{\r\n    constructor(x1,y1,x2,y2){\r\n        this.startPoint={x:x1, y:y1}\r\n        this.endPoint={x:x2, y:y2}\r\n    }\r\n\r\n    //Displays the Wall\r\n    show(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.moveTo(this.startPoint.x,this.startPoint.y);\r\n        context.lineTo(this.endPoint.x, this.endPoint.y);\r\n        context.lineWidth=1;\r\n        context.strokeStyle = \"white\";\r\n        context.stroke();\r\n    }\r\n}","/*\r\nThis file handles the calculation for the Rays\r\n*/\r\n\r\nexport default class Ray {\r\n    constructor(pos, angle){\r\n        this.pos=pos;\r\n        this.direction=angle;\r\n    }\r\n\r\n    //Sets the angle of a Ray ()\r\n    setAngel(a){\r\n        this.direction.x = a.x;\r\n        this.direction.y = a.y;\r\n    }\r\n    //Calculates the Vector to a given Angle\r\n    getAngle(i){\r\n        var rad = i * Math.PI/180;\r\n        return {x: 0*Math.cos(rad)-1*Math.sin(rad),y: 1*Math.cos(rad)+0*Math.sin(rad)}\r\n    }\r\n\r\n    //Displays the Ray\r\n    show(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.moveTo(this.pos.x,this.pos.y);\r\n        context.lineTo(this.pos.x+this.direction.x, this.pos.y+this.direction.y);\r\n        context.lineWidth=1;\r\n        //context.strokeStyle = \"black\";\r\n        context.stroke();\r\n    }\r\n\r\n    //Calculates the intersection Point of the Ray and a wall\r\n    cast(wall){\r\n        const x1 = wall.startPoint.x;\r\n        const y1 = wall.startPoint.y;\r\n        const x2 = wall.endPoint.x;\r\n        const y2 = wall.endPoint.y;\r\n\r\n        const x3 = this.pos.x;\r\n        const y3 = this.pos.y;\r\n        const x4 = this.pos.x+this.direction.x;\r\n        const y4 = this.pos.y+this.direction.y;\r\n\r\n        const den = (x1-x2) * (y3-y4) - (y1-y2) * (x3- x4);\r\n\r\n        if(den === 0) return;\r\n\r\n        const t = ((x1-x3) * (y3-y4) - (y1-y3) * (x3-x4))/den;\r\n        const u = -((x1-x2) * (y1-y3) - (y1-y2) * (x1-x3))/den;\r\n\r\n        if(t>0 && t<1 && u>0){\r\n            const pt = {x: x1 + t*(x2-x1), y: y1 + t*(y2-y1)};\r\n            return pt;\r\n        } else {\r\n            return;\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n}","\r\n/*\r\nThis File handles the Methods of the Moving Particle\r\n*/\r\nimport Ray from \"./ray\";\r\n\r\nconst PARTICLE_MP_SIZE=3;\r\nconst DEFAULT_RANGE_VIEW=30;\r\nconst DEFAULT_X_POS=200;\r\nconst DEFAULT_Y_POS=200;\r\n\r\nexport default class Particle{\r\n    constructor(x=DEFAULT_X_POS,y=DEFAULT_Y_POS,view_Range=DEFAULT_RANGE_VIEW){\r\n        this.pos = {x:x, y:y};\r\n        this.rays =[]\r\n        this.heading=0;\r\n        this.view_Range=view_Range\r\n        for(let i=-view_Range;i<view_Range;i+=1){\r\n            var angle = this.getAngle(i)\r\n            this.rays.push(new Ray(this.pos, angle));\r\n        }\r\n    }\r\n\r\n    //Methods for the Movement with the Key Press (w,s)\r\n    move(amt){\r\n        const vel = this.getAngle(this.heading);\r\n        this.pos.x += amt*vel.x;\r\n        this.pos.y += amt*vel.y;\r\n    }\r\n\r\n    //Methods for the Rotation with the Key Press (a,d)\r\n    rotate(angle){\r\n        this.heading += angle;\r\n        let index=0;\r\n        for(let i=-this.view_Range;i<this.view_Range;i++){\r\n            var angle_i = this.getAngle(i+this.heading);\r\n            this.rays[index].setAngel(angle_i);\r\n            index++;\r\n        }\r\n    }\r\n\r\n    //Calculates the Vector to a given Angle\r\n    getAngle(i){\r\n        var rad = i * Math.PI/180;\r\n        return {x: 0*Math.cos(rad)-1*Math.sin(rad),y: 1*Math.cos(rad)+0*Math.sin(rad)}\r\n    }\r\n    //Calculates the distance between two points\r\n    getDistance(start, end){\r\n        return Math.sqrt(Math.pow(start.x-end.x,2)+Math.pow(start.y-end.y,2))\r\n    }\r\n\r\n    //update for the pos of the particle\r\n    update(x,y){\r\n        this.pos.x = x;\r\n        this.pos.y = y;\r\n    }\r\n\r\n    //Method to calculate the collsion between the particle rays and the walls\r\n    look(walls){\r\n        const scence=[];\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        for(let i=0;i< this.rays.length;i++){\r\n            let closest = null;\r\n            let record = Infinity;\r\n            for(let j=0;j< walls.length;j++){\r\n                const pt = this.rays[i].cast(walls[j]);\r\n                if(pt){\r\n                    const distance =  this.getDistance(this.pos, pt);\r\n                    if(distance<record){\r\n                        record=distance;\r\n                        closest=pt;\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            if(closest){\r\n                //Draws the line to the closest intersection point \r\n                context.beginPath();\r\n                context.moveTo(this.rays[i].pos.x,this.rays[i].pos.y);\r\n                context.lineTo(closest.x, closest.y);\r\n                context.strokeStyle = \"rgba(255,255,255,2)\";\r\n                context.stroke();\r\n                context.strokeStyle = \"black\";\r\n            } \r\n            scence[i] = record; // Get the Distance for every Ray for the 3d Rendering\r\n        }\r\n        return scence;\r\n    }\r\n\r\n    // displays the rays of the particle\r\n    show(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        context.fillStyle =\"red\";\r\n        context.beginPath();\r\n        context.arc(this.pos.x, this.pos.y, PARTICLE_MP_SIZE, 0, 2*Math.PI);\r\n        context.fill();\r\n        for(let i=0; i< this.rays.length;i++){\r\n            this.rays[i].show();\r\n        }\r\n    }\r\n}","/*\r\nThis File handles the Drawing on the Canvas \"3d-plane\"\r\n*/\r\nconst CANVAS_WIDTH=400;\r\nconst CANVAS_HEIGHT=400;\r\nconst scneceW = 400;\r\nconst scenceH=400;\r\n\r\nexport function reDraw3DScene(scene){\r\n    const w = scneceW/scene.length;\r\n    var canvas = document.getElementById(\"3d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    context.beginPath();\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0,0,CANVAS_WIDTH,CANVAS_HEIGHT);\r\n    context.stroke(); \r\n    for(let i=0;i<scene.length;i++){\r\n        const sq = scene[i]*scene[i];\r\n        const wSq = scneceW*scneceW;\r\n        const b = map_range(sq,0,wSq,255,0);\r\n        const h = map_range(scene[i],0,scneceW,scenceH,0);\r\n        context.fillStyle = `rgb(${b},${b},${b})`;\r\n        context.beginPath();  \r\n        let test=CANVAS_HEIGHT-h;  \r\n        context.fillRect(i*w,test/2,w+2,h);\r\n        context.stroke();\r\n    }\r\n}\r\n\r\n//Resets the Canvas to the initial state\r\nexport function resetCanvas_3d(){\r\n    var canvas = document.getElementById(\"3d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    context.beginPath();\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0,0,CANVAS_WIDTH,CANVAS_HEIGHT);\r\n    context.stroke(); \r\n}\r\n\r\n//Maps the range of an array (Value) to another Range\r\nfunction map_range(value, low1, high1, low2, high2) {\r\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\r\n}","/*\r\nThis File handles the Drawing on the Canvas \"2d-plane\"\r\n*/\r\nconst CANVAS_WIDTH=400;\r\nconst CANVAS_HEIGHT=400;\r\n\r\n//Resets the Canvas to the initial state\r\nexport function resetCanvas_2d(){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    context.beginPath();\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0,0,CANVAS_WIDTH,CANVAS_HEIGHT);\r\n    context.stroke(); \r\n}\r\n\r\n//redaws the Canvas \"2d-plane\" (Particle, boundarys, rays)\r\nexport function reDraw2D(e, particle, boundary){\r\n    var canvas = document.getElementById(\"2d-plane\");\r\n    var context = canvas.getContext(\"2d\");\r\n    var pos = e ?  getMousePos(canvas,e): null;\r\n    context.beginPath();\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0,0,CANVAS_WIDTH,CANVAS_HEIGHT);\r\n    context.stroke(); \r\n    for(let i=0;i<boundary.length;i++){\r\n        boundary[i].show();\r\n    }\r\n    if(pos && pos.x){        \r\n        particle.update(pos.x,pos.y);\r\n    } \r\n    \r\n    particle.show();     \r\n}\r\n\r\n//Gets the Mouse position on the Canvas\r\nfunction getMousePos(canvas, evt) {\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n    };\r\n}","/*\r\nThis File handles the Drawing on the Canvases \"2d-plane, 3d-plane\"\r\n*/\r\nimport {reDraw3DScene, resetCanvas_3d} from \"./3d-plane/methods\";\r\nimport {reDraw2D, resetCanvas_2d} from \"./2d-plane/methods\";\r\n\r\n//Redraws both Canvases \"2d-plane\" and \"3d-plane\"\r\nexport function reDraw(e, particle, boundary, render3D=false){\r\n    reDraw2D(e, particle, boundary);\r\n    let scene=particle.look(boundary);\r\n    if(render3D){\r\n        reDraw3DScene(scene);\r\n    } else {\r\n        resetCanvas_3d();\r\n    }       \r\n}\r\n\r\n//resets the Canvas \"2d-plane\"\r\nexport function resetCanvas2d(){\r\n    resetCanvas_2d();\r\n}\r\n\r\n//resets the canvas \"3d-plane\"\r\nexport function resetCanvas3d(){\r\n    resetCanvas_3d();\r\n}","import React from 'react';\r\nimport \"./Raycasting.css\";\r\nimport Boundary from \"./Objects/boundary\";\r\nimport Particle from \"./Objects/particle\";\r\nimport {reDraw,resetCanvas2d,resetCanvas3d} from \"./Canvas/methods\";\r\nimport {Button, Slider} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'gray',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      top: 4,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: 'red',\r\n      },\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\nconst CANVAS_WIDTH=400;\r\nconst CANVAS_HEIGHT=400;\r\nconst NUMBER_RANDOM_WALLS=5;\r\nconst DEFAULT_RANGE_VIEW=30;\r\nconst MOVE_SPEED=5;\r\nconst ROTATE_SPEED=5;\r\n\r\nexport default class RayCasting extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            boundary: [],\r\n            particle: new Particle(),\r\n            render3d: false, //Canvas \"3d-plane\" is On\r\n            moveMode: true, // true=Mouse, false=Keyboard\r\n        }\r\n    }\r\n\r\n    //Creates Ranom Walls and Draws the Canvas\r\n    componentDidMount(){ \r\n        let boundary = this.state.boundary;\r\n        for(let i=0;i<NUMBER_RANDOM_WALLS;i++){\r\n            var x1=Math.floor(Math.random()*CANVAS_WIDTH);\r\n            var y1=Math.floor(Math.random()*CANVAS_HEIGHT);\r\n            var x2=Math.floor(Math.random()*CANVAS_WIDTH);\r\n            var y2=Math.floor(Math.random()*CANVAS_HEIGHT);\r\n            boundary.push( new Boundary(x1,y1,x2,y2));\r\n        }\r\n        //Walls on the boarder of the canvas\r\n        boundary.push(new Boundary(0,0,CANVAS_WIDTH,0));\r\n        boundary.push(new Boundary(CANVAS_WIDTH,0,CANVAS_WIDTH,CANVAS_HEIGHT));\r\n        boundary.push(new Boundary(CANVAS_WIDTH,CANVAS_HEIGHT,0,CANVAS_HEIGHT));\r\n        boundary.push(new Boundary(0,CANVAS_HEIGHT,0,0));\r\n\r\n        this.setState({boundary:boundary});\r\n        for(let i=0;i<NUMBER_RANDOM_WALLS+4;i++){\r\n            boundary[i].show();\r\n        }\r\n        reDraw(null,this.state.particle, this.state.boundary, this.state.render3d);\r\n    }\r\n\r\n    //Move Particle with Mouse\r\n    moveRay(e){\r\n        if(!this.state.moveMode) return;//Exit if Movement is with Keypresses\r\n        reDraw(e, this.state.particle, this.state.boundary, this.state.render3d);\r\n    }\r\n\r\n    //Move Particle with Keyboard\r\n    rotateView(e){\r\n        if(this.state.moveMode) return;//Exit if Movment is with Mouse\r\n        if(e.key===\"a\"){\r\n            this.state.particle.rotate(ROTATE_SPEED);\r\n            reDraw(e, this.state.particle, this.state.boundary, this.state.render3d);\r\n        }\r\n        if(e.key===\"d\"){\r\n            this.state.particle.rotate(-ROTATE_SPEED);\r\n            reDraw(e, this.state.particle, this.state.boundary, this.state.render3d);\r\n        }\r\n\r\n        if(e.key===\"w\"){\r\n            this.state.particle.move(MOVE_SPEED);\r\n            reDraw(e, this.state.particle, this.state.boundary, this.state.render3d);\r\n        }\r\n        \r\n        if(e.key===\"s\"){\r\n            this.state.particle.move(-MOVE_SPEED);\r\n            reDraw(e, this.state.particle, this.state.boundary, this.state.render3d);\r\n        }\r\n    }\r\n\r\n    //handles the View Range Change of the Particle and redraw the canvas\r\n    handleViewRangeChange(e, val){\r\n        resetCanvas2d();\r\n        let particle = new Particle(this.state.particle.pos.x,this.state.particle.pos.y,val);\r\n        this.setState({particle: particle});\r\n        reDraw(null,this.state.particle, this.state.boundary);\r\n    }\r\n\r\n    switch3DView(){\r\n        this.setState({render3d: !this.state.render3d});\r\n        setTimeout(() =>{\r\n            if(!this.state.render3d){\r\n                resetCanvas3d();\r\n            } else{\r\n                reDraw(null, this.state.particle, this.state.boundary, this.state.render3d);\r\n            }\r\n        },20)     \r\n    }\r\n\r\n    //handles the movemode switch and resets the particle position to the center of the canvas\r\n    switchMoveMode(){\r\n        let particle = this.state.particle;\r\n        particle.pos.x = CANVAS_WIDTH/2;\r\n        particle.pos.y = CANVAS_HEIGHT/2;\r\n        this.setState({moveMode: !this.state.moveMode, particle: particle});\r\n        reDraw(null, this.state.particle, this.state.boundary, this.state.render3d);\r\n    }\r\n\r\n\r\n    render(){\r\n      const {render3d, moveMode} = this.state;\r\n        return(\r\n            <div className=\"raycasting\" onKeyDown={(e) => this.rotateView(e)}>\r\n                <h1>Raycasting</h1>\r\n                <Button variant=\"outlined\" onClick={() => this.switch3DView()}>{render3d ? \"3D Render On\":\"3D Render Off\"}</Button>\r\n                <Button variant=\"outlined\" onClick={() => this.switchMoveMode()}>{moveMode ? \"Move Mouse\":\"Move Keyboard\"}</Button>\r\n                <h4>W: Forward, S:Backward</h4>\r\n                <h4>A:Rotate(left), D:Rotate(right)</h4>\r\n                <div className=\"raycasting__labels__slider\">\r\n                    <h4>View Range:</h4>\r\n                        <PrettoSlider className=\"slider\" valueLabelDisplay=\"on\" aria-label=\"pretto slider\" defaultValue={DEFAULT_RANGE_VIEW} min={1} max={180} step={1}\r\n                        onChange={(e, val) => this.handleViewRangeChange(e, val)} \r\n                        scale={(x) => x *2} \r\n                        />\r\n                </div>\r\n                <canvas className=\"raycasting__canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                        onMouseMoveCapture={ (e) => this.moveRay(e)}\r\n                        onClick={ (e) => this.rotateView(e)}\r\n                        onKeyDown={(e) => this.rotateView(e)}\r\n                        tabIndex=\"0\"\r\n                ></canvas>\r\n                <canvas className=\"raycasting__canvas__3dplane\" id=\"3d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                    \r\n                ></canvas>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import './App.css';\nimport RayCasting from \"./RayCasting/Raycasting\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <RayCasting></RayCasting>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}